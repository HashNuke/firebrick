---
- hosts: firebrick-servers
  remote_user: root
  vars:
    deployer: "deployer"
    project_repo: https://github.com/HashNuke/firebrick.git
    project_path: "/home/{{deployer}}/projects/firebrick"
    project_version: "master"
    mix_env: "prod"

    #TODO decide using mix_env or rails_env or node_env
    database_name: "firebrick-{{mix_env}}"


  roles:
    - common
    - {role: "deployer-user", user_to_create: "{{deployer}}" }
    - pip
    - postgres
    - {role: "asdf", run_as_user: "{{deployer}}"}
    - {role: "elixir-project", run_as_user: "{{deployer}}" }
    # TODO monit
    # TODO logrotate


  tasks:
    - name: "clone firebrick project"
      git: repo="{{project_repo}}" dest="{{project_path}}"
      remote_user: "{{deployer}}"


    - name: "install erlang, elixir & nodejs using asdf"
      command: 'bash -lc "asdf install"'
      remote_user: "{{deployer}}"
      args:
        chdir: "{{project_path}}"


    - name: "create database"
      postgresql_db: name="{{database_name}}" encoding='UTF-8'
      remote_user: "{{deployer}}"


    - name: "fetch project dependencies"
      command: 'bash -lc "mix deps.get"'
      remote_user: "{{deployer}}"
      args:
        chdir: "{{project_path}}"
        environment: "MIX_ENV={{ mix_env }}"


    - name: "run database migrations"
      command: 'bash -lc "mix ecto.migrate"'
      remote_user: "{{deployer}}"
      args:
        chdir: "{{project_path}}"
        environment: "MIX_ENV={{ mix_env }}"


    - name: "install frontend dependencies"
      command: 'bash -lc "npm install --production"'
      remote_user: "{{deployer}}"
      args:
        chdir: "{{project_path}}/frontend"


    - name: "build frontend"
      command: 'bash -lc "npm run build -prod"'
      remote_user: "{{deployer}}"
      args:
        chdir: "{{project_path}}/frontend"


    # - name: "copy monit config"
    #   template: src="firebrick.monit.j2" dest="/etc/monit/conf/firebrick.monit"


    # - name: start monit
    #   service: name=monit state=started enabled=yes

    # - name: "copy logrotate config"
